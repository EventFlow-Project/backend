version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eventflow-backend
    restart: unless-stopped
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - eventflow-network

  postgres:
    image: postgres:16-alpine
    container_name: eventflow-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - eventflow-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=768MB
      -c maintenance_work_mem=64MB
      -c work_mem=16MB
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c wal_buffers=16MB
      -c checkpoint_completion_target=0.9
      -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  minio:
    image: minio/minio
    container_name: eventflow-minio
    hostname: eventflow-minio
    restart: unless-stopped
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_WEB_PORT}:${MINIO_WEB_PORT}"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_WEB_PORT}"
    networks:
      - eventflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
      - eventflow-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      until (mc alias set myminio http://minio:${MINIO_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}); do
        echo 'Waiting for MinIO to be ready...';
        sleep 5;
      done;
      mc mb myminio/eventflow;
      mc anonymous set download myminio/eventflow;
      sleep infinity
      "

volumes:
  postgres-data:
    name: eventflow-postgres-data

  minio_storage:
    name: eventflow-minio-storage

networks:
  eventflow-network:
    name: eventflow-network
    driver: bridge