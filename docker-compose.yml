version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: eventflow-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - minio
    networks:
      - eventflow-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eventflow-backend
    restart: unless-stopped
    expose:
      - "${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
      - minio
    networks:
      - eventflow-network

  postgres:
    image: postgres:16-alpine
    container_name: eventflow-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - "${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - eventflow-network

  minio:
    image: minio/minio
    container_name: eventflow-minio
    restart: unless-stopped
    expose:
      - "${MINIO_PORT}"
      - "${MINIO_WEB_PORT}"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_WEB_PORT}"
    networks:
      - eventflow-network

volumes:
  postgres-data:
    name: eventflow-postgres-data

  minio_storage:
    name: eventflow-minio-storage

networks:
  eventflow-network:
    name: eventflow-network
    driver: bridge